name: Vercel deployment pipeline

on:
  push:
    branches:
      - master
      - dev
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Run lint
        run: yarn lint
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

  deploy_preview:
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel (Preview)
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        # env:
        #   CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        #   DATABASE_URL: ${{ secrets.DATABASE_URL }}
        #   NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        #   NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY }}

  deploy_production:
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: yarn install
      - name: Install Vercel CLI
        run: yarn global add vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel (Production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        # env:
        #   CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        #   DATABASE_URL: ${{ secrets.DATABASE_URL }}
        #   NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        #   NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_UPLOADCARE_PUBLIC_KEY }}
